package com.wordcount
import akka.actor.{ ActorSystem, ActorLogging, Actor, Props }
import scala.io.Source
import akka.actor.ActorRef
case class Line(line: String)

class Parent(child: ActorRef) extends Actor with ActorLogging {

  var wordcount = 0
  def receive = {
    case Line(line) =>
      {
        val words = line.split(" ")
        wordcount = wordcount + words.size
      }
      child ! wordcount
  }

}

class Child extends Actor with ActorLogging {

  def receive = {
    case message =>
      println(message)
      sender ! message
     
  }
}

object ThinkPint extends App {
  val system = ActorSystem("howdy-akka")
  val child = system.actorOf(Props[Child], "child")
  val parent = system.actorOf(Props(new Parent(child)), "parent")
  val file = "test.txt"
  for (line <- Source.fromFile(file).getLines()) {
    parent ! Line(line)
  }
}